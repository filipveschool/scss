// -----------------------------------------------------------------------------
// This file contains all application-wide Sass functions.
// -----------------------------------------------------------------------------
// Global Functions
@import 'functions/color-function';
@import 'functions/assign-inputs';
@import 'functions/contains';
@import 'functions/contains-falsy';
@import 'functions/convert-number-to-word';
@import 'functions/is-length';
@import 'functions/is-light';
@import 'functions/is-number';
@import 'functions/is-size';
@import 'functions/px-to-em';
@import 'functions/px-to-rem';
@import 'functions/shade';
@import 'functions/strip-units';
@import 'functions/tint';
@import 'functions/transition-property-name';
@import 'functions/unpack';
@import 'functions/modular-scale';
@import 'functions/reverse-list';
@import 'functions/z-index-calculation';

/// Native `url(..)` function wrapper
/// @param {String} $base - base URL for the asset
/// @param {String} $type - asset type folder (e.g. `fonts/`)
/// @param {String} $path - asset path
/// @return {Url}
@function asset($base, $type, $path) {
  @return url($base + $type + $path);
}

/// Returns URL to an image based on its path
/// @param {String} $path - image path
/// @param {String} $base [$base-url] - base URL
/// @return {Url}
/// @require $base-url
@function image($path, $base: $base-url) {
  @return asset($base, 'images/', $path);
}

/// Returns URL to a font based on its path
/// @param {String} $path - font path
/// @param {String} $base [$base-url] - base URL
/// @return {Url}
/// @require $base-url
@function font($path, $base: $base-url) {
  @return asset($base, 'fonts/', $path);
}
