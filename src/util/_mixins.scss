// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------
// Global css3 mixins
@import 'mixins/css3/animation';
@import 'mixins/css3/appearance';
@import 'mixins/css3/backface-visibility';
@import 'mixins/css3/background';
@import 'mixins/css3/background-image';
@import 'mixins/css3/border-image';
@import 'mixins/css3/box';
@import 'mixins/css3/calc';
@import 'mixins/css3/columns';
@import 'mixins/css3/filter';
@import 'mixins/css3/flex-box';
@import 'mixins/css3/flex_mixins';
@import 'mixins/css3/font-face';
@import 'mixins/css3/font-feature-settings';
@import 'mixins/css3/hidpi-media-query';
@import 'mixins/css3/hyphens';
@import 'mixins/css3/image-rendering';
@import 'mixins/css3/keyframes';
@import 'mixins/css3/linear-gradient';
@import 'mixins/css3/opacity';
@import 'mixins/css3/others';
@import 'mixins/css3/perspective';
@import 'mixins/css3/placeholder';
@import 'mixins/css3/radial-gradient';
@import 'mixins/css3/selection';
@import 'mixins/css3/text-decoration';
@import 'mixins/css3/transform';
@import 'mixins/css3/transition';
@import 'mixins/css3/user-select';
// Global other mixins
@import 'mixins/alignment';
@import 'mixins/angled-edges';
@import 'mixins/border/border-color';
@import 'mixins/border/border-radius';
@import 'mixins/border/border-style';
@import 'mixins/border/border-width';
@import 'mixins/buttons';
@import 'mixins/centering';
@import 'mixins/clearfix';
@import 'mixins/ellipsis';
@import 'mixins/floating';
@import 'mixins/font-stacks';
@import 'mixins/forms';
@import 'mixins/grid';
@import 'mixins/hide-text';
@import 'mixins/hyphens';
@import 'mixins/images';
@import 'mixins/list-reset';
@import 'mixins/margin';
@import 'mixins/margin-padding-reset';
@import 'mixins/media-queries';
@import 'mixins/navbar-mixins';
@import 'mixins/padding';
@import 'mixins/position';
@import 'mixins/prefixer';
@import 'mixins/retina-image';
@import 'mixins/shadows';
@import 'mixins/size';
@import 'mixins/text-inputs';
@import 'mixins/timing-functions';
@import 'mixins/triangle';
@import 'mixins/utilities';
@import 'mixins/vertical-align';
@import 'mixins/word-break';
@import 'mixins/word-wrap';
@import 'mixins/z-index';
@import 'mixins/pseudo';
@import 'mixins/placeholders';
@import 'mixins/hardware';
@import 'mixins/rounded-corners';
@import 'mixins/background-cover';
@import 'mixins/coverer';
// Global typography mixins
@import 'mixins/typography/font-legibility';
@import 'mixins/typography/font-smoothing';
@import 'mixins/typography/font-mixins';

// bootstrap 4 mixins
@import 'mixins/grid/bootstrap_breakpoints_mixins';
@import 'mixins/grid/grid-framework';
@import 'mixins/grid/grid';



/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
///
/// @example scss - basic usage
/// a {
///     background: $link_background_color;
///     color: $linkColor;
///     text-decoration: none;
///         @include on-event {
///            color: $linkColorHover;
///            text-decoration: underline;
///           }
///   }
///
/// @example scss - basic output
/// a {
///    background: transparent;
///    color: #16a085;
///    text-decoration: none;
///   }
///  a:hover,
///  a:active,
///  a:focus {
///    color: #1abc9c;
///    text-decoration: underline;
/// }
///
/// @example scss - basic usage
/// .links {
///         background: $link_background_color;
///         color: $linkColor;
///         text-decoration: none;
///             @include on-event(true) {
///                 color: $linkColorHover;
///                 text-decoration: underline;
///             }
///     }
///
/// @example scss - basic output
/// .links {
///         background: transparent;
///         color: #16a085;
///         text-decoration: none;
///     }
///
/// .links,
/// .links:hover,
/// .links:active,
/// .links:focus {
///    color: #1abc9c;
///    text-decoration: underline;
/// }
///

@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly
/// @author Hugo Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}

